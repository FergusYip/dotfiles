#!/usr/bin/env python3

import subprocess
import shlex
import json
import re
import sys


class Colors:
    GREEN = '\033[92m'
    NONE = '\033[0m'


p = subprocess.run(["git", "branchless", "query", "-b", "stack()"], capture_output=True, text=True)
stack_branches = p.stdout.split('\n')

p2 = subprocess.run(shlex.split("gh pr list -A '@me' --json 'number,baseRefName,headRefName,body'"),
                    capture_output=True,
                    text=True)
open_prs = json.loads(p2.stdout)

branch_pr_map = {pr['headRefName']: pr for pr in open_prs}

pr_train = [branch_pr_map.get(branch) for branch in stack_branches if branch_pr_map.get(branch)]

branches_with_pr = [branch for branch in stack_branches if branch_pr_map.get(branch)]

pr_train_numbers = [branch_pr_map[branch]['number'] for branch in branches_with_pr]

for i, branch in enumerate(branches_with_pr):

    pr = branch_pr_map[branch]

    pr_train_list = '\n'.join(
        [f'- #{number} üìç' if pr['number'] == number else f'- #{number}' for number in pr_train_numbers])

    pr_train_markdown = f''

    base_branch = branches_with_pr[i - 1] if i else 'master'

    # result = re.search(r"<pr-train-toc>(.+)</pr-train-toc", pr['body'])
    result = re.search(r"<pr-train-toc>(.*)</pr-train-toc>", pr['body'], re.S)

    body = pr['body']
    if result:
        body = body.replace(result.group(1), f'\n\n{pr_train_list}\n\n')
    else:
        body = f'{body}\n\n## PR Train\n\n<pr-train-toc>\n\n{pr_train_list}\n\n</pr-train-toc>\n'

    edit_command = ['gh', 'pr', 'edit', branch, '-B', base_branch, '-b', body]
    p3 = subprocess.run(edit_command, capture_output=True, text=True)
    if p3.returncode:
        print(p3.stderr, file=sys.stderr)
        exit(1)
    print(f'Updated {Colors.GREEN}{branch}{Colors.NONE}')
