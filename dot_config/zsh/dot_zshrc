which starship >/dev/null && eval "$(starship init zsh)"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

HISTSIZE=5000               
HISTFILE=$ZDOTDIR/.zsh_history
SAVEHIST=5000

# setopt appendhistory    # Append history to the history file (no overwriting)
setopt SHARE_HISTORY      # Share history across terminals
setopt HIST_IGNORE_DUPS
setopt INC_APPEND_HISTORY  # Immediately append to the history file, not just when a term is killed

# Basic auto/tab complete:
autoload -U compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots) # Include hidden files.

# vi mode
bindkey -v
export KEYTIMEOUT=25

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
    [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
    [[ ${KEYMAP} == viins ]] ||
    [[ ${KEYMAP} = '' ]] ||
    [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
  zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
  echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q'                # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q'; } # Use beam shape cursor for each new prompt.

export PATH=/Library/PostgreSQL/12/bin:$PATH
export PGDATA="/Library/PostgreSQL/12/data"

export PATH="$PATH:$HOME/Projects/firefox"
export PATH="$PATH:$HOME/.pub-cache/bin"
export PATH=~/Library/flutter/bin:$PATH
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

export PATH="$PATH:$HOME/bin"
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:/usr/local/opt/arm-gcc-bin@8/bin"
export PATH="$PATH:/usr/local/sbin"
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:$HOME/go/bin
export PATH=$PATH:$HOME/.cargo/bin
export PATH=$PATH:$HOME/scripts
export PATH=$PATH:"$HOME/Library/Application Support/JetBrains/Toolbox/scripts"

export AWS_PROFILE=default


# https://github.com/ajeetdsouza/zoxide
which zoxide >/dev/null && eval "$(zoxide init zsh)"
which direnv >/dev/null && eval "$(direnv hook $SHELL)"
which jj >/dev/null && source <(jj util completion zsh)

export EDITOR="nvim"
alias vim='nvim'
alias vi='nvim'

source "$ZDOTDIR/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
source "$ZDOTDIR/zsh-autosuggestions/zsh-autosuggestions.zsh"

[[ ! -f $ZDOTDIR/goto.sh ]] || source $ZDOTDIR/goto.sh

LFCD=~/.config/lf/lfcd.sh
if [ -f "$LFCD" ]; then
    source "$LFCD"
fi

[ -f "$HOME/.ghcup/env" ] && source "$HOME/.ghcup/env" # ghcup-env
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# asdf runtime version manager
export ASDF_CONFIG_FILE=$HOME/.config/asdf/.asdfrc
[ -f "$HOME/.asdf/asdf.sh" ] && source $HOME/.asdf/asdf.sh # git install
[ -f "/usr/local/opt/asdf/asdf.sh" ] && source /usr/local/opt/asdf/asdf.sh # pacman install
# [ -f "/opt/homebrew/opt/asdf/libexec/asdf.sh" ] && source "/opt/homebrew/opt/asdf/libexec/asdf.sh" # homebrew install
export PATH="$PATH:${ASDF_DATA_DIR:-$HOME/.asdf}/shims"

[ -f ~/.config/credentials ] && source ~/.config/credentials
[ -f ~/.config/private_aliases ] && source ~/.config/private_aliases
source ~/.config/aliases/main.sh

